[{"D:\\induktalk-client\\src\\index.js":"1","D:\\induktalk-client\\src\\App.js":"2","D:\\induktalk-client\\src\\Components\\Router.js":"3","D:\\induktalk-client\\src\\routes\\Auth\\index.tsx":"4","D:\\induktalk-client\\src\\routes\\Auth\\AuthContainer.tsx":"5","D:\\induktalk-client\\src\\routes\\Auth\\AuthPresenter.tsx":"6","D:\\induktalk-client\\src\\components\\Router.js":"7","D:\\induktalk-client\\src\\styles\\GlobalStyles.ts":"8","D:\\induktalk-client\\src\\styles\\styles.ts":"9","D:\\induktalk-client\\src\\components\\auth\\JoinForm.tsx":"10","D:\\induktalk-client\\src\\components\\auth\\LoginForm.tsx":"11","D:\\induktalk-client\\src\\apollo\\client.ts":"12","D:\\induktalk-client\\src\\graphql\\auth.ts":"13","D:\\induktalk-client\\src\\routes\\Feed\\index.tsx":"14","D:\\induktalk-client\\src\\routes\\Feed\\FeedContainer.tsx":"15","D:\\induktalk-client\\src\\routes\\Feed\\FeedPresenter.tsx":"16","D:\\induktalk-client\\src\\imgData.tsx":"17","D:\\induktalk-client\\src\\styles\\feedStyles.ts":"18","D:\\induktalk-client\\src\\routes\\Test\\index.tsx":"19","D:\\induktalk-client\\src\\routes\\Test\\TestContainer.tsx":"20","D:\\induktalk-client\\src\\routes\\Test\\TestPresenter.tsx":"21","D:\\induktalk-client\\src\\routes\\Test\\styles.ts":"22","D:\\induktalk-client\\src\\components\\test\\Card\\CardPresenter.tsx":"23","D:\\induktalk-client\\src\\components\\test\\Card\\index.tsx":"24","D:\\induktalk-client\\src\\components\\test\\Card\\CardContainer.tsx":"25"},{"size":207,"mtime":1608916610094,"results":"26","hashOfConfig":"27"},{"size":722,"mtime":1609586865992,"results":"28","hashOfConfig":"27"},{"size":406,"mtime":1608983835097,"results":"29","hashOfConfig":"27"},{"size":79,"mtime":1609077108508,"results":"30","hashOfConfig":"27"},{"size":4196,"mtime":1609586842033,"results":"31","hashOfConfig":"27"},{"size":1168,"mtime":1609587371123,"results":"32","hashOfConfig":"27"},{"size":1215,"mtime":1610108369489,"results":"33","hashOfConfig":"27"},{"size":199,"mtime":1608984307936,"results":"34","hashOfConfig":"27"},{"size":3535,"mtime":1609597244751,"results":"35","hashOfConfig":"27"},{"size":3502,"mtime":1609071522071,"results":"36","hashOfConfig":"27"},{"size":2819,"mtime":1609346875938,"results":"37","hashOfConfig":"27"},{"size":1243,"mtime":1609758274541,"results":"38","hashOfConfig":"27"},{"size":683,"mtime":1609080805854,"results":"39","hashOfConfig":"27"},{"size":79,"mtime":1609077306360,"results":"40","hashOfConfig":"27"},{"size":924,"mtime":1609599056866,"results":"41","hashOfConfig":"27"},{"size":6128,"mtime":1609603657924,"results":"42","hashOfConfig":"27"},{"size":6031,"mtime":1609701866482,"results":"43","hashOfConfig":"27"},{"size":4248,"mtime":1609603566826,"results":"44","hashOfConfig":"27"},{"size":79,"mtime":1610108304918,"results":"45","hashOfConfig":"27"},{"size":175,"mtime":1610108219867,"results":"46","hashOfConfig":"27"},{"size":498,"mtime":1610114512579,"results":"47","hashOfConfig":"27"},{"size":1359,"mtime":1610116156296,"results":"48","hashOfConfig":"27"},{"size":2748,"mtime":1610120391558,"results":"49","hashOfConfig":"27"},{"size":79,"mtime":1610108179559,"results":"50","hashOfConfig":"27"},{"size":1164,"mtime":1610116724757,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"8iqsqs",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\induktalk-client\\src\\index.js",[],["107","108"],"D:\\induktalk-client\\src\\App.js",[],"D:\\induktalk-client\\src\\Components\\Router.js",[],"D:\\induktalk-client\\src\\routes\\Auth\\index.tsx",[],["109","110"],"D:\\induktalk-client\\src\\routes\\Auth\\AuthContainer.tsx",[],"D:\\induktalk-client\\src\\routes\\Auth\\AuthPresenter.tsx",[],"D:\\induktalk-client\\src\\components\\Router.js",["111"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Auth from \"../routes/Auth\";\r\nimport Feed from \"../routes/Feed\";\r\nimport Test from \"../routes/Test\";\r\n\r\n//로그인 라우터\r\nconst LoginRoute = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Test />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\n//로그아웃 라우터\r\nconst LogoutRoute = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Auth />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nconst Router = () => {\r\n    const IS_LOGIN = gql`\r\n        {\r\n            isLogin @client #client = >cache에 있는 데이터를 뽑아옴\r\n        }\r\n    `;\r\n    console.log(IS_LOGIN);\r\n\r\n    const {\r\n        data: { isLogin },\r\n    } = useQuery(IS_LOGIN);\r\n\r\n    console.log(isLogin);\r\n\r\n    //true 로그인 else 로그인창\r\n    return true ? <LoginRoute /> : <LogoutRoute />;\r\n};\r\n\r\nexport default Router;\r\n","D:\\induktalk-client\\src\\styles\\GlobalStyles.ts",[],"D:\\induktalk-client\\src\\styles\\styles.ts",[],"D:\\induktalk-client\\src\\components\\auth\\JoinForm.tsx",[],"D:\\induktalk-client\\src\\components\\auth\\LoginForm.tsx",["112"],"import React from \"react\";\r\nimport { Box, Button, Input, Wrapper } from \"../../styles/styles\";\r\nimport { JOIN_ACTION, LOGIN_ACTION } from \"../../routes/Auth/AuthContainer\";\r\nimport { IProps } from \"../../routes/Auth/AuthPresenter\";\r\n\r\nconst LoginForm = ({ userData, setUserData, onSubmit, setForm }: IProps) => {\r\n    return (\r\n        <>\r\n            <Wrapper\r\n                width={\"100%\"}\r\n                height={\"100vh\"}\r\n                backgroundColor={\"#82dd70\"}\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n            >\r\n                <Box\r\n                    display={\"flex\"}\r\n                    width={\"500px\"}\r\n                    height={\"700px\"}\r\n                    backgroundColor={\"#acacac\"}\r\n                    borderRadius={\"10px\"}\r\n                    justifyContent={\"center\"}\r\n                    alignItems={\"center\"}\r\n                    flexDirection={\"column\"}\r\n                    position={\"relative\"}\r\n                >\r\n                    <img src={\"/image/logo.png\"} style={{ position: \"absolute\", top: 0 }} />\r\n                    <Input\r\n                        className={\"studentId\"}\r\n                        placeholder={\"학번\"}\r\n                        padding={\"15px\"}\r\n                        width={\"250px\"}\r\n                        value={userData.studentId}\r\n                        onChange={(e) => {\r\n                            setUserData({ ...userData, studentId: e.target.value });\r\n                        }}\r\n                    />\r\n                    <Input\r\n                        placeholder={\"비밀번호\"}\r\n                        type={\"password\"}\r\n                        margin={\"20px\"}\r\n                        padding={\"15px\"}\r\n                        width={\"250px\"}\r\n                        value={userData.password}\r\n                        onChange={(e) => {\r\n                            setUserData({ ...userData, password: e.target.value });\r\n                        }}\r\n                    />\r\n\r\n                    <Button\r\n                        padding={\"10px\"}\r\n                        borderRadius={\"5px\"}\r\n                        width={\"250px;\"}\r\n                        onClick={(e) => onSubmit(e, LOGIN_ACTION)}\r\n                    >\r\n                        로그인\r\n                    </Button>\r\n                    <Button\r\n                        padding={\"10px\"}\r\n                        borderRadius={\"5px\"}\r\n                        width={\"250px\"}\r\n                        margin={\"20px\"}\r\n                        onClick={() => setForm(JOIN_ACTION)}\r\n                    >\r\n                        회원가입\r\n                    </Button>\r\n                </Box>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","D:\\induktalk-client\\src\\apollo\\client.ts",[],"D:\\induktalk-client\\src\\graphql\\auth.ts",[],"D:\\induktalk-client\\src\\routes\\Feed\\index.tsx",[],"D:\\induktalk-client\\src\\routes\\Feed\\FeedContainer.tsx",[],"D:\\induktalk-client\\src\\routes\\Feed\\FeedPresenter.tsx",["113"],"import React, { MutableRefObject } from \"react\";\r\nimport { img } from \"../../imgData\";\r\nimport { A, Button, Div, Header, Img, Input, Span, Wrapper, Form, Article } from \"../../styles/feedStyles\";\r\n\r\ninterface IProps {\r\n    scrollEl: MutableRefObject<any>;\r\n    handleScroll: () => void;\r\n    count: number;\r\n}\r\n\r\nconst FeedPresetner: React.FC<IProps> = ({ scrollEl, count }) => {\r\n    return (\r\n        <>\r\n            <Wrapper\r\n                id=\"wrapper\"\r\n                ref={scrollEl}\r\n                width={\"100%\"}\r\n                height={\"100vh\"}\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                overflowy={\"scroll\"}\r\n            >\r\n                <Div width={\"600px\"} height={\"100vh\"} display={\"grid\"} gridTemplate={\"repeat(1,1fr)\"}>\r\n                    {img.map((element, index) => {\r\n                        if (index <= count)\r\n                            return (\r\n                                <>\r\n                                    <Article border={\"1px solid rgba(0,0,0,0.3)\"} borderRadius={\"5px\"}>\r\n                                        <Header>\r\n                                            <Div\r\n                                                height={\"50px\"}\r\n                                                display={\"flex\"}\r\n                                                alignItems={\"center\"}\r\n                                                justifyContent={\"space-between\"}\r\n                                            >\r\n                                                <Div display={\"flex\"} alignItems={\"center\"} margin={\"0 15px\"}>\r\n                                                    <Img width={\"30px\"} height={\"30px\"} src={\"/image/logo.png\"}></Img>\r\n                                                    <Span>\r\n                                                        <A>제목</A>\r\n                                                    </Span>\r\n                                                </Div>\r\n                                                <Div margin={\" 0 15px 0 0\"}>\r\n                                                    <Button width={\"100%\"}>버튼</Button>\r\n                                                </Div>\r\n                                            </Div>\r\n                                        </Header>\r\n                                        <Img width={\"100%\"} height={\"450px\"} src={element.src}></Img>\r\n                                        <Div\r\n                                            width={\"100%\"}\r\n                                            height={\"50px\"}\r\n                                            display={\"flex\"}\r\n                                            alignItems={\"center\"}\r\n                                            justifyContent={\"space-between\"}\r\n                                        >\r\n                                            <Div margin={\"0 15px\"}>\r\n                                                <Button width={\"35px\"} height={\"35px\"}>\r\n                                                    1\r\n                                                </Button>\r\n                                                <Button width={\"35px\"} height={\"35px\"}>\r\n                                                    2\r\n                                                </Button>\r\n                                                <Button width={\"35px\"} height={\"35px\"}>\r\n                                                    3\r\n                                                </Button>\r\n                                            </Div>\r\n                                            <Div margin={\"0 15px\"}>\r\n                                                <Button width={\"35px\"} height={\"35px\"}>\r\n                                                    1\r\n                                                </Button>\r\n                                            </Div>\r\n                                        </Div>\r\n                                        <Div\r\n                                            width={\"100%\"}\r\n                                            height={\"20px\"}\r\n                                            display={\"flex\"}\r\n                                            alignItems={\"center\"}\r\n                                            margin={\"0 15px\"}\r\n                                        >\r\n                                            <Span>\r\n                                                <A>좋아요</A>\r\n                                            </Span>\r\n                                        </Div>\r\n\r\n                                        <Div\r\n                                            width={\"100%\"}\r\n                                            height={\"50px\"}\r\n                                            display={\"flex\"}\r\n                                            alignItems={\"center\"}\r\n                                            margin={\"0 15px\"}\r\n                                        >\r\n                                            <Span>\r\n                                                <A>작성자:댓글</A>\r\n                                            </Span>\r\n                                        </Div>\r\n\r\n                                        <Div\r\n                                            width={\"100%\"}\r\n                                            height={\"50px\"}\r\n                                            display={\"flex\"}\r\n                                            alignItems={\"center\"}\r\n                                            margin={\"0 15px\"}\r\n                                        >\r\n                                            <Form>\r\n                                                <Input type=\"text\" placeholder=\"댓글 달기..\"></Input>\r\n                                            </Form>\r\n                                        </Div>\r\n                                    </Article>\r\n                                </>\r\n                            );\r\n                    })}\r\n                </Div>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FeedPresetner;\r\n\r\n// onScroll={props.handleScroll}\r\n","D:\\induktalk-client\\src\\imgData.tsx",[],"D:\\induktalk-client\\src\\styles\\feedStyles.ts",[],"D:\\induktalk-client\\src\\routes\\Test\\index.tsx",[],"D:\\induktalk-client\\src\\routes\\Test\\TestContainer.tsx",[],"D:\\induktalk-client\\src\\routes\\Test\\TestPresenter.tsx",[],"D:\\induktalk-client\\src\\routes\\Test\\styles.ts",["114"],"D:\\induktalk-client\\src\\components\\test\\Card\\CardPresenter.tsx",["115","116"],"D:\\induktalk-client\\src\\components\\test\\Card\\index.tsx",[],"D:\\induktalk-client\\src\\components\\test\\Card\\CardContainer.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":28,"column":21,"nodeType":"127","endLine":28,"endColumn":93},{"ruleId":"128","severity":1,"message":"129","line":24,"column":47,"nodeType":"130","messageId":"131","endLine":24,"endColumn":49},{"ruleId":"132","severity":1,"message":"133","line":1,"column":10,"nodeType":"123","messageId":"124","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":46,"column":17,"nodeType":"127","endLine":49,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":79,"column":1,"nodeType":"136","messageId":"137","endLine":83,"endColumn":2},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Feed' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-unused-vars","'Container' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]