[{"D:\\induktalk-client\\src\\index.js":"1","D:\\induktalk-client\\src\\App.js":"2","D:\\induktalk-client\\src\\Components\\Router.js":"3","D:\\induktalk-client\\src\\routes\\Auth\\index.tsx":"4","D:\\induktalk-client\\src\\routes\\Auth\\AuthContainer.tsx":"5","D:\\induktalk-client\\src\\routes\\Auth\\AuthPresenter.tsx":"6","D:\\induktalk-client\\src\\components\\Router.js":"7","D:\\induktalk-client\\src\\styles\\GlobalStyles.ts":"8","D:\\induktalk-client\\src\\styles\\styles.ts":"9","D:\\induktalk-client\\src\\components\\auth\\JoinForm.tsx":"10","D:\\induktalk-client\\src\\components\\auth\\LoginForm.tsx":"11","D:\\induktalk-client\\src\\apollo\\client.ts":"12","D:\\induktalk-client\\src\\graphql\\auth.ts":"13","D:\\induktalk-client\\src\\routes\\Feed\\index.tsx":"14","D:\\induktalk-client\\src\\routes\\Feed\\FeedContainer.tsx":"15","D:\\induktalk-client\\src\\routes\\Feed\\FeedPresenter.tsx":"16","D:\\induktalk-client\\src\\imgData.tsx":"17","D:\\induktalk-client\\src\\styles\\feedStyles.ts":"18"},{"size":207,"mtime":1608916610094,"results":"19","hashOfConfig":"20"},{"size":722,"mtime":1609586865992,"results":"21","hashOfConfig":"20"},{"size":406,"mtime":1608983835097,"results":"22","hashOfConfig":"20"},{"size":79,"mtime":1609077108508,"results":"23","hashOfConfig":"20"},{"size":4196,"mtime":1609586842033,"results":"24","hashOfConfig":"20"},{"size":1168,"mtime":1609587371123,"results":"25","hashOfConfig":"20"},{"size":1179,"mtime":1609585432721,"results":"26","hashOfConfig":"20"},{"size":199,"mtime":1608984307936,"results":"27","hashOfConfig":"20"},{"size":3535,"mtime":1609597244751,"results":"28","hashOfConfig":"20"},{"size":3502,"mtime":1609071522071,"results":"29","hashOfConfig":"20"},{"size":2819,"mtime":1609346875938,"results":"30","hashOfConfig":"20"},{"size":1243,"mtime":1609346227255,"results":"31","hashOfConfig":"20"},{"size":683,"mtime":1609080805854,"results":"32","hashOfConfig":"20"},{"size":79,"mtime":1609077306360,"results":"33","hashOfConfig":"20"},{"size":924,"mtime":1609599056866,"results":"34","hashOfConfig":"20"},{"size":6128,"mtime":1609603657924,"results":"35","hashOfConfig":"20"},{"size":6038,"mtime":1609588829208,"results":"36","hashOfConfig":"20"},{"size":4248,"mtime":1609603566826,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"8iqsqs",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\induktalk-client\\src\\index.js",[],["77","78"],"D:\\induktalk-client\\src\\App.js",[],"D:\\induktalk-client\\src\\Components\\Router.js",[],"D:\\induktalk-client\\src\\routes\\Auth\\index.tsx",[],["79","80"],"D:\\induktalk-client\\src\\routes\\Auth\\AuthContainer.tsx",[],"D:\\induktalk-client\\src\\routes\\Auth\\AuthPresenter.tsx",[],"D:\\induktalk-client\\src\\components\\Router.js",[],"D:\\induktalk-client\\src\\styles\\GlobalStyles.ts",[],"D:\\induktalk-client\\src\\styles\\styles.ts",[],"D:\\induktalk-client\\src\\components\\auth\\JoinForm.tsx",[],"D:\\induktalk-client\\src\\components\\auth\\LoginForm.tsx",["81"],"import React from \"react\";\r\nimport { Box, Button, Input, Wrapper } from \"../../styles/styles\";\r\nimport { JOIN_ACTION, LOGIN_ACTION } from \"../../routes/Auth/AuthContainer\";\r\nimport { IProps } from \"../../routes/Auth/AuthPresenter\";\r\n\r\nconst LoginForm = ({ userData, setUserData, onSubmit, setForm }: IProps) => {\r\n    return (\r\n        <>\r\n            <Wrapper\r\n                width={\"100%\"}\r\n                height={\"100vh\"}\r\n                backgroundColor={\"#82dd70\"}\r\n                display={\"flex\"}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n            >\r\n                <Box\r\n                    display={\"flex\"}\r\n                    width={\"500px\"}\r\n                    height={\"700px\"}\r\n                    backgroundColor={\"#acacac\"}\r\n                    borderRadius={\"10px\"}\r\n                    justifyContent={\"center\"}\r\n                    alignItems={\"center\"}\r\n                    flexDirection={\"column\"}\r\n                    position={\"relative\"}\r\n                >\r\n                    <img src={\"/image/logo.png\"} style={{ position: \"absolute\", top: 0 }} />\r\n                    <Input\r\n                        className={\"studentId\"}\r\n                        placeholder={\"학번\"}\r\n                        padding={\"15px\"}\r\n                        width={\"250px\"}\r\n                        value={userData.studentId}\r\n                        onChange={(e) => {\r\n                            setUserData({ ...userData, studentId: e.target.value });\r\n                        }}\r\n                    />\r\n                    <Input\r\n                        placeholder={\"비밀번호\"}\r\n                        type={\"password\"}\r\n                        margin={\"20px\"}\r\n                        padding={\"15px\"}\r\n                        width={\"250px\"}\r\n                        value={userData.password}\r\n                        onChange={(e) => {\r\n                            setUserData({ ...userData, password: e.target.value });\r\n                        }}\r\n                    />\r\n\r\n                    <Button\r\n                        padding={\"10px\"}\r\n                        borderRadius={\"5px\"}\r\n                        width={\"250px;\"}\r\n                        onClick={(e) => onSubmit(e, LOGIN_ACTION)}\r\n                    >\r\n                        로그인\r\n                    </Button>\r\n                    <Button\r\n                        padding={\"10px\"}\r\n                        borderRadius={\"5px\"}\r\n                        width={\"250px\"}\r\n                        margin={\"20px\"}\r\n                        onClick={() => setForm(JOIN_ACTION)}\r\n                    >\r\n                        회원가입\r\n                    </Button>\r\n                </Box>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","D:\\induktalk-client\\src\\apollo\\client.ts",[],"D:\\induktalk-client\\src\\graphql\\auth.ts",[],"D:\\induktalk-client\\src\\routes\\Feed\\index.tsx",[],"D:\\induktalk-client\\src\\routes\\Feed\\FeedContainer.tsx",[],"D:\\induktalk-client\\src\\routes\\Feed\\FeedPresenter.tsx",["82"],"D:\\induktalk-client\\src\\imgData.tsx",[],"D:\\induktalk-client\\src\\styles\\feedStyles.ts",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":28,"column":21,"nodeType":"89","endLine":28,"endColumn":93},{"ruleId":"90","severity":1,"message":"91","line":24,"column":47,"nodeType":"92","messageId":"93","endLine":24,"endColumn":49},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]